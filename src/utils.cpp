#include "utils.h"

bool mensajeCompleto[8][190] = {
    //     p                   R                    A                   1                   -                   v                   J                   -                   2                   0                   2                   3                   <                   g                   R                   U                   P                   O                       1                    7                  >
    {0,0,0,0,0,0,0,0, 0, 1,1,1,1,1,1,1,0, 0, 1,1,1,1,1,1,1,1, 0, 0,0,0,0,0,0,1,1, 0, 0,0,0,0,0,0,0,0, 0, 0,0,0,0,0,0,0,0, 0, 1,1,1,1,1,1,1,1, 0, 0,0,0,0,0,0,0,0, 0, 0,1,1,1,1,1,1,1, 0, 0,0,1,1,1,1,1,0, 0, 0,1,1,1,1,1,1,1, 0, 0,0,1,1,1,1,1,0, 0, 0,0,0,0,1,1,0,0, 0, 0,0,0,0,0,0,0,0, 0, 1,1,1,1,1,1,1,0, 0, 1,1,0,0,0,0,1,1, 0, 1,1,1,1,1,1,1,0, 0, 0,1,1,1,1,1,1,0, 0,0,0, 0,0,0,0,0,0,1,1, 0, 0,0,1,1,1,1,1,1, 0, 0,0,1,1,0,0,0,0},
    {0,0,0,0,0,0,0,0, 0, 1,1,1,1,1,1,1,1, 0, 1,1,1,1,1,1,1,1, 0, 0,0,0,0,0,0,1,1, 0, 0,0,0,0,0,0,0,0, 0, 0,0,0,0,0,0,0,0, 0, 1,1,1,1,1,1,1,1, 0, 0,0,0,0,0,0,0,0, 0, 0,1,1,1,1,1,1,1, 0, 0,1,1,1,1,1,1,1, 0, 0,1,1,1,1,1,1,1, 0, 0,1,1,1,1,1,1,1, 0, 0,0,1,1,0,0,0,0, 0, 0,0,0,1,1,0,0,0, 0, 1,1,1,1,1,1,1,1, 0, 1,1,0,0,0,0,1,1, 0, 1,1,1,1,1,1,1,1, 0, 1,1,1,1,1,1,1,1, 0,0,0, 0,0,0,0,0,0,1,1, 0, 0,0,1,1,1,1,1,1, 0, 0,0,0,0,1,1,0,0},
    {0,1,1,1,1,1,0,0, 0, 1,1,0,0,0,0,1,1, 0, 1,1,0,0,0,0,1,1, 0, 0,0,0,0,0,0,1,1, 0, 0,0,0,0,0,0,0,0, 0, 0,0,0,0,0,0,0,0, 0, 0,0,0,1,1,0,0,0, 0, 0,0,0,0,0,0,0,0, 0, 0,0,0,0,0,0,1,1, 0, 0,1,1,0,0,0,1,1, 0, 0,0,0,0,0,0,1,1, 0, 0,0,0,0,0,0,1,1, 0, 0,1,1,0,0,0,0,0, 0, 0,0,1,0,0,1,0,0, 0, 1,1,0,0,0,0,1,1, 0, 1,1,0,0,0,0,1,1, 0, 1,1,0,0,0,0,1,1, 0, 1,1,0,0,0,0,1,1, 0,0,0, 0,0,0,0,0,0,1,1, 0, 0,0,0,0,0,0,1,1, 0, 0,0,0,0,0,1,1,0},
    {0,1,1,0,0,1,0,0, 0, 1,1,0,0,0,0,1,1, 0, 1,1,0,0,0,0,1,1, 0, 0,0,0,0,0,0,1,1, 0, 1,1,1,1,1,1,1,1, 0, 0,1,1,0,0,1,1,0, 0, 0,0,0,1,1,0,0,0, 0, 1,1,1,1,1,1,1,1, 0, 0,0,0,0,0,0,1,1, 0, 0,1,1,0,0,0,1,1, 0, 0,0,0,0,0,0,1,1, 0, 0,0,0,1,1,1,1,1, 0, 1,0,0,0,0,0,0,0, 0, 0,0,1,0,0,1,0,0, 0, 1,1,0,0,0,0,1,1, 0, 1,1,0,0,0,0,1,1, 0, 1,1,0,0,0,0,1,1, 0, 1,1,0,0,0,0,1,1, 0,0,0, 0,0,0,0,0,0,1,1, 0, 0,0,0,0,0,0,1,1, 0, 0,0,0,0,0,0,0,1},
    {0,1,1,1,1,1,0,0, 0, 1,1,1,1,1,1,1,0, 0, 1,1,1,1,1,1,1,1, 0, 0,0,0,0,0,0,1,1, 0, 1,1,1,1,1,1,1,1, 0, 0,1,1,0,0,1,1,0, 0, 0,0,0,1,1,0,0,0, 0, 1,1,1,1,1,1,1,1, 0, 0,1,1,1,1,1,1,1, 0, 0,1,1,0,0,0,1,1, 0, 0,1,1,1,1,1,1,1, 0, 0,0,0,1,1,1,1,1, 0, 1,0,0,0,0,0,0,0, 0, 0,0,0,1,1,1,0,0, 0, 1,1,1,1,1,1,1,0, 0, 1,1,0,0,0,0,1,1, 0, 1,1,1,1,1,1,1,1, 0, 1,1,0,0,0,0,1,1, 0,0,0, 0,0,0,0,0,0,1,1, 0, 0,0,0,0,1,1,1,1, 0, 0,0,0,0,0,0,0,1},
    {0,1,1,0,0,0,0,0, 0, 1,1,1,1,1,1,1,1, 0, 1,1,1,1,1,1,1,1, 0, 0,0,0,0,0,0,1,1, 0, 0,0,0,0,0,0,0,0, 0, 0,1,1,0,0,1,1,0, 0, 1,1,0,1,1,0,0,0, 0, 0,0,0,0,0,0,0,0, 0, 0,1,1,0,0,0,0,0, 0, 0,1,1,0,0,0,1,1, 0, 0,1,1,0,0,0,0,0, 0, 0,0,0,0,0,0,1,1, 0, 0,1,1,0,0,0,0,0, 0, 0,0,0,0,0,1,0,0, 0, 1,1,1,1,1,1,1,1, 0, 1,1,0,0,0,0,1,1, 0, 1,1,1,1,1,1,1,0, 0, 1,1,0,0,0,0,1,1, 0,0,0, 0,0,0,0,0,0,1,1, 0, 0,0,0,0,0,0,1,1, 0, 0,0,0,0,0,1,1,0},
    {0,1,1,0,0,0,0,0, 0, 1,1,0,0,0,0,1,1, 0, 1,1,0,0,0,0,1,1, 0, 0,0,0,0,0,0,1,1, 0, 0,0,0,0,0,0,0,0, 0, 0,0,1,1,1,1,0,0, 0, 1,1,1,1,1,0,0,0, 0, 0,0,0,0,0,0,0,0, 0, 0,1,1,1,1,1,1,1, 0, 0,1,1,1,1,1,1,1, 0, 0,1,1,1,1,1,1,1, 0, 0,1,1,1,1,1,1,1, 0, 0,0,1,1,0,0,0,0, 0, 0,0,1,0,0,1,0,0, 0, 1,1,0,0,0,0,1,1, 0, 1,1,1,1,1,1,1,1, 0, 1,1,0,0,0,0,0,0, 0, 1,1,1,1,1,1,1,1, 0,0,0, 0,0,0,0,0,0,1,1, 0, 0,0,0,0,0,0,1,1, 0, 0,0,0,0,1,1,0,0},
    {0,1,1,0,0,0,0,0, 0, 1,1,0,0,0,0,1,1, 0, 1,1,0,0,0,0,1,1, 0, 0,0,0,0,0,0,1,1, 0, 0,0,0,0,0,0,0,0, 0, 0,0,0,1,1,0,0,0, 0, 0,1,1,1,0,0,0,0, 0, 0,0,0,0,0,0,0,0, 0, 0,1,1,1,1,1,1,1, 0, 0,0,1,1,1,1,1,0, 0, 0,1,1,1,1,1,1,1, 0, 0,0,1,1,1,1,1,0, 0, 0,0,0,0,1,1,0,0, 0, 0,0,0,1,1,0,0,0, 0, 1,1,0,0,0,0,1,1, 0, 0,1,1,1,1,1,1,0, 0, 1,1,0,0,0,0,0,0, 0, 0,1,1,1,1,1,1,0, 0,0,0, 0,0,0,0,0,0,1,1, 0, 0,0,0,0,0,0,1,1, 0, 0,0,1,1,0,0,0,0}
};

bool resizedMessage [8][16];
int currentLeftSideCol = 0;

void cycleMessageLeft () {
  
  computeResizedMessage();

  currentLeftSideCol++;

  if (currentLeftSideCol == 189) {
    currentLeftSideCol = 0;
  } 
}

void computeResizedMessage() {
  for (int i = 0; i < 8; i++) {
    for (int j = 0; j < 16; j++) {
      
      if(j+currentLeftSideCol <= 189) {
        resizedMessage[i][j] = mensajeCompleto[i][j+currentLeftSideCol];
      }else {
        resizedMessage[i][j] = mensajeCompleto[i][j+currentLeftSideCol-190];
      }
    }
  }
}

void cycleMessageRight(){
  
  computeResizedMessage();

  currentLeftSideCol--;

  if (currentLeftSideCol == -1) {
    currentLeftSideCol = 189;
  } 
}